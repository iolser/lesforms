{"version":3,"sources":["webpack:///src/fields/C:/Share/lesforms/frontend/src/fields/NIFField.vue","webpack:///src/fields/C:/Share/lesforms/frontend/src/fields/PhoneField.vue"],"names":[],"mappings":"AA2EE,oGAEE,uBAAwB,CACxB,QACF,CAGA,oCACE,yBACF,CC3BA,oGAEE,uBAAwB,CACxB,QACF,CAGA,oCACE,yBACF","file":"chunk-de0799ba.8b367b2b.css","sourcesContent":["<template>\r\n  <div>\r\n    <Input\r\n      :id=\"qid\"\r\n      v-model=\"answer\"\r\n      type=\"number\"\r\n      class=\"input\"\r\n      :class=\"{'is-warning' : !triedSubmit && !valid, 'is-danger' : triedSubmit && !valid}\"\r\n      :placeholder=\"question.properties.placeholder\"\r\n      :required=\"question.required\"\r\n      @input=\"update()\"\r\n    />\r\n    <FormInvalidator \r\n      :valid=\"valid\"\r\n      invalid-string=\"Deve introduzir um NIF vÃ¡lido.\"\r\n      :class=\"{'hidden' : !triedSubmit}\"\r\n      :start-invalid=\"triedSubmit\"\r\n      @invalid=\"$emit('uncollapse'); triedSubmit = true;\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport FormInvalidator from \"@/components/FormInvalidator\";\r\nimport Input from \"@/components/Input\";\r\nexport default {\r\n  name: \"NumberField\",\r\n  props: [\"question\", \"questionIndex\", \"sectionIndex\", \"qid\", \"value\"],\r\n  emits: [\"update\"],\r\n  components: {Input, FormInvalidator},\r\n  data() {\r\n    return {\r\n      answer:\r\n        this.value !== undefined\r\n          ? this.value\r\n          : this.question.properties.default,\r\n      triedSubmit: false\r\n    };\r\n  },\r\n  mounted() {\r\n    this.update();\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.$emit(\"update\", {\r\n        sectionIndex: this.sectionIndex,\r\n        questionIndex: this.questionIndex,\r\n        answer: this.answer !== undefined ? Number(this.answer) : this.answer,\r\n      });\r\n    },\r\n    validateNIF(nif) {// https://gist.github.com/Pipas/69ab5b514a53a494ec2a80669e950569\r\n      if (nif.length != 9) return false;\r\n      if(!['1', '2', '3', '5', '6', '8'].includes(nif.substr(0,1)) && \r\n        !['45', '70', '71', '72', '77', '79', '90', '91', '98', '99'].includes(nif.substr(0,2)))\r\n          return false;\r\n\r\n      let total = nif[0] * 9 + nif[1] * 8 + nif[2] * 7 + nif[3] * 6 + nif[4] * 5 + nif[5] * 4 + nif[6] * 3 + nif[7] * 2;\r\n\r\n      let modulo11 = total - parseInt(total / 11) * 11;\r\n      let comparador = modulo11 == 1 || modulo11 == 0 ? 0 : 11 - modulo11;\r\n\r\n      return nif[8] == comparador;\r\n    }\r\n  },\r\n  computed: {\r\n    valid() {\r\n      if (this.answer === undefined)\r\n        return !this.question.required;\r\n      return this.validateNIF(this.answer.toString());\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  input::-webkit-outer-spin-button,\r\n  input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n\r\n  /* Firefox */\r\n  input[type=number] {\r\n    -moz-appearance: textfield;\r\n  }\r\n</style>","<template>\r\n  <div\r\n    class=\"field has-addons\"\r\n  >\r\n    <p class=\"control\">\r\n      <a class=\"button is-static\">\r\n        +351\r\n      </a>\r\n    </p>\r\n    <p class=\"control\">\r\n      <Input\r\n        :id=\"qid\"\r\n        v-model=\"answer\"\r\n        type=\"tel\"\r\n        class=\"input\"\r\n        pattern=\"(?:9[1-36][0-9]|2[12][0-9]|2[35][1-689]|24[1-59]|26[1-35689]|27[1-9]|28[1-69]|29[1256]|3[0-9]{2})[0-9]{6}\"\r\n        minlength=\"9\"\r\n        maxlength=\"9\"\r\n        :placeholder=\"question.properties.placeholder\"\r\n        :required=\"question.required\"\r\n        @input=\"update\"\r\n      />\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Input from \"@/components/Input\";\r\nexport default {\r\n  name: \"NumberField\",\r\n  props: [\"question\", \"questionIndex\", \"sectionIndex\", \"qid\", \"value\"],\r\n  emits: [\"update\"],\r\n  components: {Input},\r\n  data() {\r\n    return {\r\n      answer:\r\n        this.value !== undefined\r\n          ? this.value\r\n          : this.question.properties.default\r\n    };\r\n  },\r\n  mounted() {\r\n    this.update();\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.$emit(\"update\", {\r\n        sectionIndex: this.sectionIndex,\r\n        questionIndex: this.questionIndex,\r\n        answer: this.answer !== undefined ? Number(this.answer) : this.answer,\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  input::-webkit-outer-spin-button,\r\n  input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n\r\n  /* Firefox */\r\n  input[type=number] {\r\n    -moz-appearance: textfield;\r\n  }\r\n</style>"]}